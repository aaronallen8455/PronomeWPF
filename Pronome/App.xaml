<Application x:Class="Pronome.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Pronome"
             xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!--Change the background color when textBox is disabled-->
        <Style TargetType="TextBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" 
                                             BorderBrush="{TemplateBinding BorderBrush}" 
                                             Background="{TemplateBinding Background}" 
                                             SnapsToDevicePixels="true">
                            <ScrollViewer Name="PART_ContentHost" Background="{TemplateBinding Background}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="PART_ContentHost" Property="Background" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Used for the font size of the beat code input-->
        <sys:Double x:Key="textBoxFontSize">16</sys:Double>

        <!--The base panel of the beat layer-->
        <Grid
            x:Key="layerGrid"
            x:Shared="False"
            Margin="5, 5, 5, 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
        </Grid>
        
        <!--Background rect-->
        <Rectangle 
            x:Key="backgroundRect"
            x:Shared="False"
            Fill="SteelBlue" 
            Grid.ColumnSpan="3"/>
        
        <!--Seperates the beat input from other controls-->
        <Grid
            x:Key="controlGrid"
            x:Shared="False"
            Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
        </Grid>

        <!--The panel that holds the inner contents of beat layer controls-->
        <WrapPanel
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            x:Key="layerWrap"
            x:Shared="False"
            Margin="5"
            Grid.Row="1">
            <WrapPanel.Resources>
                <Style TargetType="StackPanel">
                    <Setter Property="Margin" Value="10, 0"/>
                </Style>
            </WrapPanel.Resources>
        </WrapPanel>
        
        <!--The beat code input control-->
        <avalonEdit:TextEditor 
            x:Key="textEditor" 
            x:Shared="False"
            SyntaxHighlighting="Pronome"
            FontFamily="Consolas"
            FontSize="{DynamicResource textBoxFontSize}" 
            VerticalScrollBarVisibility="Auto" 
            HorizontalScrollBarVisibility="Auto"
            Background="Black"
            Foreground="White"
            Margin="10,0,10,4"
            Padding="3,0"
            PreviewKeyDown="TextEditor_PreviewKeyDown"/>
        
        <!--Source selector dropdown-->
        <ComboBox
            Width="Auto"
            x:Key="sourceSelector"
            x:Shared="False"
            DataContext="{DynamicResource disableDuringPlay}"
            IsEnabled="{Binding Path=IsEnabled}"/>
        
        <!--Pitch input-->
        <TextBox
            x:Key="pitchInput"
            Width="50"
            Background="Black"
            
            Foreground="White"
            FontFamily="Consolas"
            FontSize="12pt"
            x:Shared="False"
            DataContext="{DynamicResource disableDuringPlay}"
            IsEnabled="{Binding Path=IsEnabled}"/>
        
        <!--Offset input-->
        <TextBox
            x:Key="offsetInput"
            Width="50"
            Background="Black"
            Foreground="White"
            FontFamily="Consolas"
            FontSize="12pt"
            x:Shared="False"
            Text="0"
            DataContext="{DynamicResource disableDuringPlay}"
            IsEnabled="{Binding Path=IsEnabled}"/>
        
        <!--Volume control-->
        <Slider
            x:Key="volumeControl"
            Width="80"
            Maximum="1"
            Minimum="0"
            Value="1"
            x:Shared="False"/>

        <!--Pan control-->
        <Slider
            x:Key="panControl"
            Width="80"
            Maximum="1"
            Minimum="-1"
            Value="0"
            x:Shared="False"/>

        <!--Mute button-->
        <ToggleButton
            x:Key="muteButton"
            x:Shared="False"
            Margin="4, 4, 4, 2"
            Width="18">
            M
        </ToggleButton>
        
        <!--Solo button-->
        <ToggleButton
            x:Key="soloButton"
            x:Shared="False"
            Margin="4, 2, 4, 4"
            Width="18">
            S
        </ToggleButton>
        
        <!--Layer number label-->
        <TextBlock 
            x:Key="layerIndexLabel" 
            x:Shared="False"
            Grid.Column="0" 
            HorizontalAlignment="Center" 
            VerticalAlignment="Top"
            FontWeight="Bold"
            Margin="0, 4, 0, 0"/>

        <!--Mute and solo stack panel-->
        <StackPanel 
            x:Key="layerLeftStackPanel"
            x:Shared="False"
            Grid.Column="0" 
            HorizontalAlignment="Center" 
            VerticalAlignment="Center"
            Orientation="Vertical"/>

        <!--The X used by close window buttons-->
        <Image x:Key="closeButtonGlyph" MaxHeight="12" x:Shared="False">
            <Image.Source>
                <DrawingImage>
                    <DrawingImage.Drawing>
                        <GeometryDrawing>
                            <GeometryDrawing.Pen>
                                <Pen Brush="#FFF1F1F1" Thickness="2"/>
                            </GeometryDrawing.Pen>
                            <GeometryDrawing.Geometry>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,0">
                                        <LineSegment Point="8,8"/>
                                    </PathFigure>
                                    <PathFigure StartPoint="0,8">
                                        <LineSegment Point="8,0"/>
                                    </PathFigure>
                                </PathGeometry>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingImage.Drawing>
                </DrawingImage>
            </Image.Source>
        </Image>
        
        <!--Delete button-->
        <Button
            x:Key="deleteButton"
            x:Shared="False"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Grid.Column="2"
            Margin="4"
            Width="23"
            Height="23"
            Background="MediumPurple"
            DataContext="{DynamicResource disableDuringPlay}"
            IsEnabled="{Binding Path=IsEnabled}"
            Content="{StaticResource closeButtonGlyph}"/>

        <!--Labels-->
        <Label
            x:Key="label"
            x:Shared="False"
            Foreground="White"
            FontSize="7pt"/>
        
        <!--Label - controller stack panel-->
        <StackPanel
            x:Key="labelControlPanel"
            x:Shared="False"
            Orientation="Vertical"/>
        
        <!--Used as binding for enabling/disabling UI elements during playback-->
        <Button x:Key="disableDuringPlay" IsEnabled="True"/>
    </Application.Resources>
</Application>
