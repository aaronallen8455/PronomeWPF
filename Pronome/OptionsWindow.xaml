<Window x:Class="Pronome.OptionsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Pronome"
        mc:Ignorable="d"
        Title="ProNome Options" Height="300" Width="530"
        Name="optionsWindow">

    <ScrollViewer VerticalScrollBarVisibility="Auto">
        
        <DockPanel Name="dock" HorizontalAlignment="Stretch" 
                       DataContext="{DynamicResource disableDuringPlay}" >
            <DockPanel.Resources>
                <Style TargetType="StackPanel">
                    <Setter Property="Margin" Value="10, 0"/>
                </Style>
                <Style TargetType="TextBox">
                    <Setter Property="Width" Value="50"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                </Style>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="10, 0"/>
                </Style>
                <Style TargetType="Expander">
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="VerticalAlignment" Value="Top"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="BorderThickness" Value="3"/>
                    <Setter Property="DockPanel.Dock" Value="Top"/>
                    <Setter Property="Padding" Value="0"/>
                    <Style.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="Padding" Value="0,0,0,20"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Margin" Value="5,-7,5,10"/>
                    <Setter Property="TextWrapping" Value="Wrap"/>
                </Style>
                <Style TargetType="Separator">
                    <Setter Property="Margin" Value="0,20,0,20"/>
                </Style>
                <Style TargetType="GroupBox">
                    <Setter Property="Padding" Value="10"/>
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" FontSize="10"/>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DockPanel.Resources>

        <!--Random Muting-->
            <Expander Header="Random Muting">
                <StackPanel>
                    <TextBlock>When Random Muting is enabled, there is a percent chance that a beat cell will not be played. Enter a Ramp Duration to have the chance start at 0% and reach the full value in the given number of seconds.</TextBlock>
                    <WrapPanel>
                        <StackPanel>
                            <Label Target="{Binding ElementName=randomMuteToggle}">Enable</Label>
                            <CheckBox x:Name="randomMuteToggle" Checked="applyMuting" Unchecked="applyMuting"/>
                        </StackPanel>
                        <StackPanel>
                            <Label Target="{Binding ElementName=randomMuteInput}">Percentage</Label>
                            <TextBox x:Name="randomMuteInput" LostFocus="applyMuting"  Text="0"/>
                        </StackPanel>
                        <StackPanel>
                            <Label Target="{Binding ElementName=randomMuteTimerInput}">Ramp Duration (seconds)</Label>
                            <TextBox x:Name="randomMuteTimerInput" LostFocus="applyMuting"  Text="0"/>
                        </StackPanel>
                    </WrapPanel>
                </StackPanel>
            </Expander>
            <!--Interval muting-->
            <Expander Header="Intervallic Muting">
                <StackPanel>
                    <TextBlock>
                        With intervallic muting enabled, the beat will play for a set duration and then be silent for a set duration. The interval durations are represented as a number of Quarter-Notes.
                    </TextBlock>
                    <WrapPanel IsEnabled="{Binding Path=IsEnabled}">
                        <StackPanel>
                            <Label Target="{Binding ElementName=intervalMuteToggle}">Enable</Label>
                            <CheckBox x:Name="intervalMuteToggle" Checked="applyIntervalMuting" Unchecked="applyIntervalMuting"/>
                        </StackPanel>
                        <StackPanel>
                            <Label Target="{Binding ElementName=intervalAudibleInput}">Audible Interval</Label>
                            <TextBox x:Name="intervalAudibleInput" 
                                        Text="0" 
                                        ToolTip="A value representing the number of audible quarter notes."
                                        LostFocus="applyIntervalMuting"/>
                        </StackPanel>
                        <StackPanel>
                            <Label Target="{Binding ElementName=intervalSilentInput}">Silent Interval</Label>
                            <TextBox x:Name="intervalSilentInput"
                                        Text="0"
                                        ToolTip="A value representing the number of silent quarter notes."
                                        LostFocus="applyIntervalMuting"/>
                        </StackPanel>
                    </WrapPanel>
                </StackPanel>
            </Expander>
            <!--Save and Load-->
            <Expander Header="Save and Load">
                <StackPanel>
                    <TextBlock>
                        You can save your work to a file or open a previously saved beat.
                    </TextBlock>
                    <WrapPanel>
                        <Button Name="saveButton" Click="saveButton_Click">Save Beat As...</Button>
                        <Button Name="loadButton" Click="loadButton_Click" IsEnabled="{Binding Path=IsEnabled}">Load Beat</Button>
                    </WrapPanel>
                </StackPanel>
            </Expander>
            <Expander Header="Wav File Creation">
                <StackPanel>
                    <TextBlock>
                        There's two ways to export your beat to a Wav audio file:<LineBreak/>
                        - Based on a specified length of time.<LineBreak/>
                        - Record to the Wav file as the beat is playing until you press stop.
                    </TextBlock>
                    <WrapPanel IsEnabled="{Binding Path=IsEnabled}">
                        <Button Name="exportWavButton" Click="exportWavButton_Click">Export Wav File</Button>
                        <Button Name="recordWavButton" Click="recordWavButton_Click">Record to Wav File</Button>
                    </WrapPanel>
                </StackPanel>
            </Expander>
            <Expander Header="Visuals">
                <StackPanel>
                    <GroupBox Header="Graph">
                        <StackPanel>
                            <TextBlock>
                                Turn the beat graph's blinking visual effect on or off.
                            </TextBlock>
                            <StackPanel>
                                <Label Target="{Binding ElementName=blinkToggle}">Enable Blinking</Label>
                                <CheckBox Name="blinkToggle" Checked="blinkToggle_Checked" Unchecked="blinkToggle_Unchecked"  Loaded="blinkToggle_Loaded"/>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>

                    <GroupBox Header="Bounce">
                        <StackPanel>
                            <TextBlock>
                                The number of quarter-notes to show in the queue.
                            </TextBlock>
                            <StackPanel>
                                <Label Target="{Binding ElementName=queueSize}">Queue Size</Label>
                                <TextBox Name="queueSizeInput" LostFocus="queueSizeInput_LostFocus" Loaded="queueSizeInput_Loaded"/>
                            </StackPanel>
                            <Separator/>
                            
                            <TextBlock>
                                Set where to divide the screen.
                            </TextBlock>
                            <Slider Name="bounceDivideSlider" 
                                    ValueChanged="bounceDivideSlider_ValueChanged" 
                                    Loaded="bounceDivideSlider_Loaded"
                                    Minimum="0" Maximum="1"/>
                            <Separator/>

                            <TextBlock>
                                Set the amount of taper in the queue lanes.
                            </TextBlock>
                            <Slider Name="bounceLaneTaperSlider" 
                                    ValueChanged="bounceLaneTaperSlider_ValueChanged" 
                                    Loaded="bounceLaneTaperSlider_Loaded"
                                    Minimum="0" Maximum="600"/>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </Expander>
            <Expander Header="Additional Settings">
                <StackPanel>
                    <TextBlock>
                        Set the font size for beat code inputs.
                    </TextBlock>
                    <StackPanel Orientation="Horizontal">
                        <Label Target="{Binding ElementName=beatFontSizeTextBox}"></Label>
                        <TextBox Name="beatFontSizeTextBox" LostFocus="beatFontSizeTextBox_LostFocus" Loaded="beatFontSizeTextBox_Loaded" Width="50"/>
                    </StackPanel>
                </StackPanel>
            </Expander>
        </DockPanel>
    </ScrollViewer>
        <!--</ScrollViewer>-->
</Window>
