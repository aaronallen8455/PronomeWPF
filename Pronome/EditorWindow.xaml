<Window x:Class="Pronome.EditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="Editor" Height="300" Width="600">
    <Window.Resources>
        <sys:Double x:Key="rowHeight">40</sys:Double>
        <sys:Double x:Key="cellHeight">25</sys:Double>
        <sys:Double x:Key="cellWidth">3</sys:Double>

        <!--The canvas that the cells are drawn on-->
        <Canvas x:Key="rowCanvas" x:Shared="False"/>

        <!--The background for the rows on which cell pattern is repeated-->
        <Rectangle 
            Width="Auto" 
            Height="{StaticResource rowHeight}" 
            x:Shared="False" 
            x:Key="rowBackgroundRectangle"
            Opacity=".3"/>
        
        <!--Row sizer element-->
        <Rectangle
            Height="{StaticResource rowHeight}"
            Fill="#FFA7DFFF"
            x:Shared="False"
            x:Key="rowSizer"/>

        <!--Cell-->
        <Rectangle 
            Width="{StaticResource cellWidth}" 
            x:Key="cellRectangle" 
            x:Shared="False" 
            Fill="Black"/>

        <!--base style that mult and repeat inherit from-->
        <Style x:Key="groupRectStyle" TargetType="Rectangle">
            <Setter Property="Height" Value="{StaticResource rowHeight}"/>
            <Setter Property="StrokeThickness" Value="1"/>
        </Style>
        
        <Rectangle
            x:Key="groupRectangle"
            x:Shared="False"
            Height="{StaticResource rowHeight}"
            Stroke="Green" StrokeThickness="1"/>

        <LinearGradientBrush
            x:Key="repeatGroupBrush"
            EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="Green" Offset="0"/>
                <GradientStop Color="Transparent" Offset=".2"/>
                <GradientStop Color="Transparent" Offset=".8"/>
                <GradientStop Color="Green" Offset="1"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush
            x:Key="multGroupBrush"
            EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="Orange" Offset="0"/>
                <GradientStop Color="Transparent" Offset=".2"/>
                <GradientStop Color="Transparent" Offset=".8"/>
                <GradientStop Color="Orange" Offset="1"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        
        <Style x:Key="repeatRectStyle" TargetType="Rectangle" BasedOn="{StaticResource groupRectStyle}">
            <Setter Property="Stroke" Value="Green"/>
            <Setter Property="Fill" Value="{StaticResource repeatGroupBrush}"/>
        </Style>
        <Style x:Key="multRectStyle" TargetType="Rectangle" BasedOn="{StaticResource groupRectStyle}">
            <Setter Property="Stroke" Value="Orange"/>
            <Setter Property="Fill" Value="{StaticResource multGroupBrush}"/>
        </Style>

        <!--Rectangle used to host visual brush copies of repeat group cells-->
        <Rectangle
            x:Key="repeatRectangle"
            x:Shared="False"
            Height="{StaticResource cellHeight}"
            Opacity=".25"/>
        
        <!--Placed over a reference block-->
        <Rectangle
            x:Key="referenceRectangle"
            x:Shared="False"
            Height="{StaticResource rowHeight}"
            Fill="MediumPurple"
            Opacity=".4"/>

        <Style TargetType="Label">
            <Setter Property="FontSize" Value="9"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
    </Window.Resources>
    <DockPanel>
        <WrapPanel DockPanel.Dock="Top" FlowDirection="LeftToRight">
            <WrapPanel.Resources>
                <Style TargetType="StackPanel">
                    <Setter Property="Margin" Value="5"/>
                </Style>
            </WrapPanel.Resources>
            <StackPanel>
                <Label Target="{Binding ElementName=incrementInput}">Increment</Label>
                <TextBox Name="incrementInput" Width="50"/>
            </StackPanel>
            <StackPanel>
                <Label Target="{Binding ElementName=durationInput}">Duration</Label>
                <TextBox Name="durationInput" Width="50"/>
            </StackPanel>
            <StackPanel>
                <Label Target="{Binding ElementName=sourceSelector}">Source</Label>
                <ComboBox Name="sourceSelector"/>
            </StackPanel>
            <StackPanel Name="pitchInputPanel">
                <Label Target="{Binding ElementName=pitchInput}">Pitch</Label>
                <TextBox Name="pitchInput" Width="50"/>
            </StackPanel>
        </WrapPanel>
        <WrapPanel DockPanel.Dock="Bottom">
            <StackPanel>
                <Label>Scale</Label>
                <StackPanel Orientation="Horizontal">
                    <TextBox Name="scaleInput" Width="30"/>
                    <TextBlock>%</TextBlock>
                </StackPanel>
            </StackPanel>
        </WrapPanel>
        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <StackPanel Name="layerPanel" SnapsToDevicePixels="True" Margin="10,0,0,0"/>
        </ScrollViewer>
    </DockPanel>
</Window>