<Window x:Class="Pronome.EditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:self="clr-namespace:Pronome"
        mc:Ignorable="d"
        Title="Editor" Height="300" Width="600">
    
    <Window.Resources>
        <sys:Double x:Key="rowHeight">40</sys:Double>
        <sys:Double x:Key="cellHeight">25</sys:Double>
        <sys:Double x:Key="cellWidth">3</sys:Double>
        <sys:Boolean x:Key="changesApplied">False</sys:Boolean>
        <sys:Boolean x:Key="cellSelected">False</sys:Boolean>

        <!--The canvas that the cells are drawn on-->
        <Canvas x:Key="rowCanvas" x:Shared="False"/>

        <!--The background for the rows on which cell pattern is repeated-->
        <Rectangle 
            Width="Auto" 
            Height="{StaticResource rowHeight}" 
            x:Shared="False" 
            x:Key="rowBackgroundRectangle"
            Opacity=".3"/>
        
        <!--Row sizer element-->
        <Rectangle
            Height="{StaticResource rowHeight}"
            Fill="#FFA7DFFF"
            x:Shared="False"
            x:Key="rowSizer"/>

        <!--Cell-->
        <Rectangle 
            Width="{StaticResource cellWidth}"
            Height="{StaticResource cellHeight}"
            x:Key="cellRectangle" 
            x:Shared="False" 
            Fill="Black"/>

        <!--Selection grid elements-->
        <Rectangle
            Width="1"
            Height="{StaticResource rowHeight}"
            x:Key="gridTick"
            x:Shared="True"
            Fill="Red"/>
        <Rectangle
            x:Key="gridSizer"
            x:Shared="True"
            Fill="Transparent"
            Height="{StaticResource rowHeight}"/>
        <Rectangle
            x:Key="gridLeft"
            x:Shared="True"
            HorizontalAlignment="Left"
            Height="{StaticResource rowHeight}"
            IsHitTestVisible="False"
            SnapsToDevicePixels="True">
            <Rectangle.LayoutTransform>
                <ScaleTransform ScaleX="-1"/>
            </Rectangle.LayoutTransform>
            <Rectangle.RenderTransform>
                <TranslateTransform X="1"/>
            </Rectangle.RenderTransform>
        </Rectangle>
        <Rectangle
            x:Key="gridRight"
            x:Shared="True"
            Height="{StaticResource rowHeight}"
            Width="Auto"
            IsHitTestVisible="False"
            SnapsToDevicePixels="True"/>

        <!--base style that mult and repeat inherit from-->
        <Style x:Key="groupRectStyle" TargetType="Rectangle">
            <Setter Property="Height" Value="{StaticResource rowHeight}"/>
            <Setter Property="StrokeThickness" Value="1"/>
        </Style>
        
        <Rectangle
            x:Key="groupRectangle"
            x:Shared="False"
            Height="{StaticResource rowHeight}"
            Stroke="Green" StrokeThickness="1"/>

        <LinearGradientBrush
            x:Key="repeatGroupBrush"
            EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="Green" Offset="0"/>
                <GradientStop Color="Transparent" Offset=".2"/>
                <GradientStop Color="Transparent" Offset=".8"/>
                <GradientStop Color="Green" Offset="1"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush
            x:Key="multGroupBrush"
            EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="Orange" Offset="0"/>
                <GradientStop Color="Transparent" Offset=".2"/>
                <GradientStop Color="Transparent" Offset=".8"/>
                <GradientStop Color="Orange" Offset="1"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        
        <Style x:Key="repeatRectStyle" TargetType="Rectangle" BasedOn="{StaticResource groupRectStyle}">
            <Setter Property="Stroke" Value="Green"/>
            <Setter Property="Fill" Value="{StaticResource repeatGroupBrush}"/>
        </Style>
        <Style x:Key="multRectStyle" TargetType="Rectangle" BasedOn="{StaticResource groupRectStyle}">
            <Setter Property="Stroke" Value="Orange"/>
            <Setter Property="Height" Value="{StaticResource cellHeight}"/>
            <Setter Property="Fill" Value="{StaticResource multGroupBrush}"/>
        </Style>

        <!--Rectangle used to host visual brush copies of repeat group cells-->
        <Rectangle
            x:Key="repeatRectangle"
            x:Shared="False"
            Height="{StaticResource cellHeight}"
            Opacity=".25"/>
        
        <!--Placed over a reference block-->
        <Rectangle
            x:Key="referenceRectangle"
            x:Shared="False"
            Height="{StaticResource cellHeight}"
            Fill="MediumPurple"
            Opacity=".4"/>

        <Style TargetType="Label">
            <Setter Property="FontSize" Value="9"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>

    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="Undo" CanExecute="Undo_CanExecute" Executed="Undo_Executed"/>
        <CommandBinding Command="Redo" CanExecute="Redo_CanExecute" Executed="Redo_Executed"/>
        <CommandBinding Command="self:Commands.DeleteSelection" CanExecute="DeleteSelection_CanExecute" Executed="DeleteSelection_Executed" />
        <CommandBinding Command="self:Commands.CreateRepeatGroup" CanExecute="CreateRepeatGroup_CanExecute" Executed="CreateRepeatGroup_Executed"/>
    </Window.CommandBindings>

    <DockPanel>
        <!--Main menu-->
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_Edit">
                <MenuItem Header="Undo" InputGestureText="Ctrl+Z" Command="Undo" x:Name="undoMenuItem"/>
                <MenuItem Header="Redo" InputGestureText="Ctrl+Y" Command="Redo" x:Name="redoMenuItem"/>
            </MenuItem>
            <MenuItem Header="Selection">
                <MenuItem Header="Deselect All"/>
                <MenuItem Header="Create Group...">
                    <MenuItem Header="Repeat Group" Command="self:Commands.CreateRepeatGroup"/>
                    <MenuItem Header="Multiply Group"/>
                </MenuItem>
                <MenuItem Header="Remove Group...">
                    <MenuItem Header="Repeat Group"/>
                    <MenuItem Header="Multiply Group"/>
                </MenuItem>
                <MenuItem Header="Delete Selected Cell(s)" InputGestureText="Del" Command="self:Commands.DeleteSelection"/>
                <MenuItem Header="Reference...">
                    <MenuItem Header="Insert Reference"/>
                    <MenuItem Header="Remove Reference"/>
                </MenuItem>
            </MenuItem>
        </Menu>
        <!--Inputs at top of window-->
        <WrapPanel DockPanel.Dock="Top" FlowDirection="LeftToRight">
            <WrapPanel.Resources>
                <Style TargetType="StackPanel">
                    <Setter Property="Margin" Value="5"/>
                </Style>
            </WrapPanel.Resources>
            <StackPanel>
                <Label Target="{Binding ElementName=incrementInput}">Increment</Label>
                <TextBox Name="incrementInput" LostFocus="incrementInput_LostFocus" Width="50" Text="1"/>
            </StackPanel>
            <StackPanel>
                <Label Target="{Binding ElementName=durationInput}">Duration</Label>
                <TextBox Name="durationInput" 
                         LostFocus="durationInput_LostFocus"
                         Width="50"
                         UndoLimit="0"
                         IsEnabled="{DynamicResource cellSelected}"/>
            </StackPanel>
            <StackPanel>
                <Label Target="{Binding ElementName=sourceSelector}">Source</Label>
                <ComboBox Name="sourceSelector" 
                          SelectionChanged="sourceSelector_SelectionChanged"
                          IsEnabled="{DynamicResource cellSelected}"/>
            </StackPanel>
            <StackPanel Name="pitchInputPanel">
                <Label Target="{Binding ElementName=pitchInput}">Pitch</Label>
                <TextBox Name="pitchInput" Width="50" LostFocus="pitchInput_LostFocus"/>
            </StackPanel>
        </WrapPanel>
        <Grid DockPanel.Dock="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" HorizontalAlignment="Left">
                <!--Scale ratio setting-->
                <Label>Scale</Label>
                <StackPanel Orientation="Horizontal" Grid.Column="0">
                    <TextBox Name="scaleInput" Width="30"/>
                    <TextBlock>%</TextBlock>
                </StackPanel>
            </StackPanel>
            <StackPanel Grid.Column="1" Margin="8">
                <!--Apply changes button-->
                <Button Name="applyChangesButton"
                        Click="applyChangesButton_Click"
                        IsEnabled="{DynamicResource changesApplied}">
                    Apply Changes
                </Button>
            </StackPanel>
        </Grid>
        <!--Mouse position tracker-->
        <TextBlock Name="mousePositionText" DockPanel.Dock="Bottom"></TextBlock>
        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <StackPanel 
                Name="layerPanel" 
                SnapsToDevicePixels="True"
                Margin="10,0,0,0" 
                MouseMove="ScrollViewer_MouseMove" 
                MouseLeave="layerPanel_MouseLeave"
                Background="Transparent"/>
        </ScrollViewer>
    </DockPanel>
</Window>