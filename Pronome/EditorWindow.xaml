<Window x:Class="Pronome.EditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:self="clr-namespace:Pronome"
        mc:Ignorable="d"
        Title="Editor" Height="500" Width="800">
    
    <Window.Resources>
        <sys:Double x:Key="rowHeight">40</sys:Double>
        <sys:Double x:Key="cellHeight">25</sys:Double>
        <sys:Double x:Key="cellWidth">3</sys:Double>
        <sys:Boolean x:Key="changesApplied">False</sys:Boolean>
        <sys:Boolean x:Key="cellSelected">False</sys:Boolean>

        <!--The base element for the rows.-->
        <Grid x:Key="rowBaseElement" 
              x:Shared="False"
              Margin="0, 6, 0, 0"/>

        <!--The canvas that the cells are drawn on-->
        <Canvas x:Key="rowCanvas" x:Shared="False"/>

        <!--The background for the rows on which cell pattern is repeated-->
        <Rectangle 
            Width="Auto" 
            MinWidth="700"
            Height="{StaticResource rowHeight}" 
            x:Shared="False" 
            x:Key="rowBackgroundRectangle"
            Opacity=".3"/>
        
        <!--Row sizer element-->
        <Rectangle
            Height="{StaticResource rowHeight}"
            Fill="#FFA7DFFF"
            x:Shared="False"
            x:Key="rowSizer"/>

        <!--Cell-->
        <Rectangle 
            Width="{StaticResource cellWidth}"
            Height="{StaticResource cellHeight}"
            x:Key="cellRectangle" 
            x:Shared="False" 
            Fill="Black"/>
        
        <!--Box Select-->
        <Rectangle
            Fill="AliceBlue"
            Stroke="Black"
            StrokeDashArray="4,2"
            StrokeThickness="2"
            Opacity=".6"
            x:Key="boxSelect"
            x:Shared="True"/>
        
        <!--Measure tick elements-->
        <Rectangle
            Width="1"
            Height="1"
            x:Key="measureTick"
            x:Shared="False"
            Fill="#FF9FBBB9"/>
        <Rectangle
            Fill="Transparent"
            Height="1"
            x:Key="measureSizer"
            x:Shared="False"/>

        <!--Selection grid elements-->
        <Rectangle
            Width="1"
            Height="{StaticResource rowHeight}"
            x:Key="gridTick"
            SnapsToDevicePixels="True"
            x:Shared="True"
            Fill="Red"/>
        <Rectangle
            x:Key="gridSizer"
            x:Shared="True"
            Fill="Transparent"
            Height="{StaticResource rowHeight}"/>
        <Rectangle
            x:Key="gridLeft"
            x:Shared="True"
            HorizontalAlignment="Left"
            Height="{StaticResource rowHeight}"
            IsHitTestVisible="False"
            SnapsToDevicePixels="True">
            <Rectangle.LayoutTransform>
                <ScaleTransform ScaleX="-1"/>
            </Rectangle.LayoutTransform>
            <Rectangle.RenderTransform>
                <TranslateTransform X="1"/>
            </Rectangle.RenderTransform>
        </Rectangle>
        <Rectangle
            x:Key="gridRight"
            x:Shared="True"
            Height="{StaticResource rowHeight}"
            Width="Auto"
            IsHitTestVisible="False"
            SnapsToDevicePixels="True"/>

        <!--base style that mult and repeat inherit from-->
        <Style x:Key="groupRectStyle" TargetType="Rectangle">
            <Setter Property="Height" Value="{StaticResource rowHeight}"/>
            <Setter Property="StrokeThickness" Value="1"/>
        </Style>
        
        <Rectangle
            x:Key="groupRectangle"
            x:Shared="False"
            Height="{StaticResource rowHeight}"
            Stroke="Green" StrokeThickness="1"/>

        <LinearGradientBrush
            x:Key="repeatGroupBrush"
            EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="Green" Offset="0"/>
                <GradientStop Color="Transparent" Offset=".2"/>
                <GradientStop Color="Transparent" Offset=".8"/>
                <GradientStop Color="Green" Offset="1"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush
            x:Key="multGroupBrush"
            EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="Orange" Offset="0"/>
                <GradientStop Color="Transparent" Offset=".2"/>
                <GradientStop Color="Transparent" Offset=".8"/>
                <GradientStop Color="Orange" Offset="1"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        
        <Style x:Key="repeatRectStyle" TargetType="Rectangle" BasedOn="{StaticResource groupRectStyle}">
            <Setter Property="Stroke" Value="Green"/>
            <Setter Property="Fill" Value="{StaticResource repeatGroupBrush}"/>
        </Style>
        <Style x:Key="multRectStyle" TargetType="Rectangle" BasedOn="{StaticResource groupRectStyle}">
            <Setter Property="Stroke" Value="Orange"/>
            <Setter Property="Height" Value="{StaticResource cellHeight}"/>
            <Setter Property="Fill" Value="{StaticResource multGroupBrush}"/>
        </Style>

        <!--Rectangle used to host visual brush copies of repeat group cells-->
        <Rectangle
            x:Key="repeatRectangle"
            x:Shared="False"
            Height="{StaticResource cellHeight}"
            Opacity=".25"/>
        
        <!--Placed over a reference block-->
        <Rectangle
            x:Key="referenceRectangle"
            x:Shared="False"
            Height="{StaticResource cellHeight}"
            Fill="MediumPurple"
            Opacity=".4"/>

        <Style TargetType="Label">
            <Setter Property="FontSize" Value="9"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>

        <!--Don't add text box changes to the undo stack-->
        <Style TargetType="TextBox">
            <Setter Property="UndoLimit" Value="0"/>
        </Style>

        <RoutedCommand x:Key="deselectAll"/>

        <Style TargetType="{x:Type ToolBar}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolBar}">
                        <Border x:Name="Border"  CornerRadius="2" BorderThickness="1" Background="Transparent">
                            <DockPanel >
                                <ToggleButton Visibility="Collapsed"  DockPanel.Dock="Right" IsEnabled="False" IsChecked="False" ClickMode="Press">
                                    <Popup x:Name="OverflowPopup" AllowsTransparency="true" Placement="Bottom" IsOpen="{Binding Path=IsOverflowOpen,RelativeSource={RelativeSource TemplatedParent}}" StaysOpen="false" Focusable="false" PopupAnimation="Slide">
                                        <Border x:Name="DropDownBorder" Background="pink" BorderThickness="1" BorderBrush="pink">
                                            <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" Margin="2" WrapWidth="200" Focusable="true"  FocusVisualStyle="{x:Null}" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Visibility="Collapsed"/>
                                        </Border>
                                    </Popup>
                                </ToggleButton>
                                <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="5,1,2,2"/>
                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="Undo" CanExecute="Undo_CanExecute" Executed="Undo_Executed"/>
        <CommandBinding Command="Redo" CanExecute="Redo_CanExecute" Executed="Redo_Executed"/>
        <CommandBinding Command="self:Commands.DeleteSelection" CanExecute="DeleteSelection_CanExecute" Executed="DeleteSelection_Executed" />
        <CommandBinding Command="self:Commands.CreateRepeatGroup" CanExecute="CreateRepeatGroup_CanExecute" Executed="CreateRepeatGroup_Executed"/>
        <CommandBinding Command="self:Commands.RemoveRepeatGroup" CanExecute="RemoveRepeatGroup_CanExecute" Executed="RemoveRepeatGroup_Executed"/>
        <CommandBinding Command="self:Commands.EditRepeatGroup" CanExecute="RemoveRepeatGroup_CanExecute" Executed="EditRepeatGroup_Executed"/>
        <CommandBinding Command="{StaticResource deselectAll}" CanExecute="Deselect_CanExecute" Executed="Deselect_Executed"/>
        <CommandBinding Command="self:Commands.CreateMultGroup" CanExecute="CreateMultGroup_CanExecute" Executed="CreateMultGroup_Executed"/>
        <CommandBinding Command="self:Commands.RemoveMultGroup" CanExecute="RemoveMultGroup_CanExecute" Executed="RemoveMultGroup_Executed"/>
        <CommandBinding Command="self:Commands.EditMultGroup" CanExecute="RemoveMultGroup_CanExecute" Executed="EditMultGroup_Executed"/>
        <CommandBinding Command="self:Commands.MoveCellsLeft" CanExecute="MoveCellsLeft_CanExecute" Executed="MoveCells_Executed"/>
        <CommandBinding Command="self:Commands.MoveCellsRight" CanExecute="MoveCellsRight_CanExecute" Executed="MoveCells_Executed"/>
        <CommandBinding Command="self:Commands.CreateReference" CanExecute="CreateReference_CanExecute" Executed="CreateReference_Executed"/>
        <CommandBinding Command="self:Commands.EditReference" CanExecute="EditReference_CanExecute" Executed="CreateReference_Executed"/>
        <CommandBinding Command="self:Commands.RemoveReference" CanExecute="EditReference_CanExecute" Executed="RemoveReference_Executed"/>
        <CommandBinding Command="self:Commands.CopyCells" CanExecute="Deselect_CanExecute" Executed="CopyCells_Executed"/>
        <CommandBinding Command="self:Commands.CutCells" CanExecute="DeleteSelection_CanExecute" Executed="CutCells_Executed"/>
        <CommandBinding Command="self:Commands.PasteCells" CanExecute="PasteCells_CanExecute" Executed="PasteCells_Executed"/>

    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Key="Delete" Command="self:Commands.DeleteSelection"/>
        <KeyBinding Key="Left" Modifiers="Ctrl" Command="self:Commands.MoveCellsLeft" CommandParameter="-1"/>
        <KeyBinding Key="Right" Modifiers="Ctrl" Command="self:Commands.MoveCellsRight" CommandParameter="1"/>
        <KeyBinding Key="C" Modifiers="Ctrl" Command="self:Commands.CopyCells"/>
        <KeyBinding Key="X" Modifiers="Ctrl" Command="self:Commands.CutCells"/>
        <KeyBinding Key="V" Modifiers="Ctrl" Command="self:Commands.PasteCells"/>
    </Window.InputBindings>

    <DockPanel>

        <!--Main menu-->
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_Edit">
                <MenuItem Header="Undo" InputGestureText="Ctrl+Z" Command="Undo" x:Name="undoMenuItem"/>
                <MenuItem Header="Redo" InputGestureText="Ctrl+Y" Command="Redo" x:Name="redoMenuItem"/>
                <Separator/>
                <MenuItem Header="Copy" InputGestureText="Ctrl+C" Command="self:Commands.CopyCells"/>
                <MenuItem Header="Cut" InputGestureText="Ctrl+X" Command="self:Commands.CutCells"/>
                <MenuItem Header="Paste" InputGestureText="Ctrl+V" Command="self:Commands.PasteCells"/>
            </MenuItem>
            <MenuItem Header="Selection">
                <MenuItem Header="Deselect All" Command="{StaticResource deselectAll}"/>
                <Separator/>
                <MenuItem Header="Repeat Group...">
                    <MenuItem Header="Create" Command="self:Commands.CreateRepeatGroup"/>
                    <MenuItem Header="Edit" Command="self:Commands.EditRepeatGroup"/>
                    <MenuItem Header="Remove" Command="self:Commands.RemoveRepeatGroup"/>
                </MenuItem>
                <MenuItem Header="Multiply Group...">
                    <MenuItem Header="Create" Command="self:Commands.CreateMultGroup"/>
                    <MenuItem Header="Edit" Command="self:Commands.EditMultGroup"/>
                    <MenuItem Header="Remove" Command="self:Commands.RemoveMultGroup"/>
                </MenuItem>
                <MenuItem Header="Reference...">
                    <MenuItem Header="Insert Reference" Command="self:Commands.CreateReference"/>
                    <MenuItem Header="Edit Reference" Command="self:Commands.EditReference"/>
                    <MenuItem Header="Remove Reference" Command="self:Commands.RemoveReference"/>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Move Cell(s) Left" InputGestureText="Ctrl+←" Command="self:Commands.MoveCellsLeft" CommandParameter="-1"/>
                <MenuItem Header="Move Cell(s) Right" InputGestureText="Ctrl+→" Command="self:Commands.MoveCellsRight" CommandParameter="1"/>
                <MenuItem Header="Delete Selected Cell(s)" InputGestureText="Del" Command="self:Commands.DeleteSelection"/>
            </MenuItem>
        </Menu>
        <!--Inputs at top of window-->
        <StackPanel DockPanel.Dock="Top">
            <WrapPanel FlowDirection="LeftToRight">
                <WrapPanel.Resources>
                    <Style TargetType="StackPanel">
                        <Setter Property="Margin" Value="5"/>
                    </Style>
                </WrapPanel.Resources>
                <StackPanel>
                    <Label Target="{Binding ElementName=measureSizeInput}">Measure Size</Label>
                    <TextBox Name="measureSizeInput" LostFocus="measureSizeInput_LostFocus" Width="50" Text="4"/>
                </StackPanel>
                <StackPanel>
                    <Label Target="{Binding ElementName=incrementInput}">Increment</Label>
                    <TextBox Name="incrementInput" LostFocus="incrementInput_LostFocus" Width="50" Text="1"/>
                </StackPanel>
                <StackPanel>
                    <Label Target="{Binding ElementName=durationInput}">Duration</Label>
                    <TextBox Name="durationInput" 
                             LostFocus="durationInput_LostFocus"
                             Width="50"
                             IsEnabled="{DynamicResource cellSelected}"/>
                </StackPanel>
                <StackPanel>
                    <Label Target="{Binding ElementName=sourceSelector}">Source</Label>
                    <self:ComboBoxFiltered x:Name="sourceSelector" 
                              SelectionChanged="sourceSelector_SelectionChanged"
                              IsEnabled="{DynamicResource cellSelected}"/>
                </StackPanel>
                <StackPanel Name="pitchInputPanel">
                    <Label Target="{Binding ElementName=pitchInput}">Pitch</Label>
                    <TextBox Name="pitchInput" Width="50" LostFocus="pitchInput_LostFocus"/>
                </StackPanel>
            </WrapPanel>

            <ToolBarTray IsLocked="True">
                <ToolBar RenderOptions.BitmapScalingMode="NearestNeighbor" OverflowMode="Never">
                    <Button ToolTip="1" Click="ToolbarSelector_Click">1</Button>
                    <Button ToolTip=".5" Click="ToolbarSelector_Click">.5</Button>
                    <Button ToolTip=".25" Click="ToolbarSelector_Click">.25</Button>
                    <Separator/>
                    <Button ToolTip="2/3" Click="ToolbarSelector_Click">2/3</Button>
                    <Button ToolTip="1/3" Click="ToolbarSelector_Click">1/3</Button>
                    <Button ToolTip="1/6" Click="ToolbarSelector_Click">1/6</Button>
                </ToolBar>
            </ToolBarTray>
        </StackPanel>
        <StatusBar DockPanel.Dock="Bottom">
            <StackPanel Margin="8">
                <Label>Zoom</Label>
                <ComboBox IsEditable="True" 
                          Name="zoomComboBox" 
                          SelectionChanged="zoomComboBox_SelectionChanged" 
                          LostFocus="zoomComboBox_LostFocus"
                          IsTextSearchEnabled="False">
                    <ComboBoxItem>800%</ComboBoxItem>
                    <ComboBoxItem>400%</ComboBoxItem>
                    <ComboBoxItem>200%</ComboBoxItem>
                    <ComboBoxItem>150%</ComboBoxItem>
                    <ComboBoxItem IsSelected="True">100%</ComboBoxItem>
                    <ComboBoxItem>66.67%</ComboBoxItem>
                    <ComboBoxItem>50%</ComboBoxItem>
                    <ComboBoxItem>33%</ComboBoxItem>
                    <ComboBoxItem>25%</ComboBoxItem>
                </ComboBox>
            </StackPanel>
            
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Margin="8" >
                    <!--Apply changes button-->
                    <Button Name="applyChangesButton"
                            Click="applyChangesButton_Click"
                            IsEnabled="{DynamicResource changesApplied}">
                        Apply Changes
                    </Button>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
        <!--Mouse position tracker-->
        <TextBlock Name="mousePositionText" DockPanel.Dock="Bottom" Margin="10,0,0,0"></TextBlock>
        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Name="layerPanelScrollViewer">
            <StackPanel 
                Name="layerPanel" 
                SnapsToDevicePixels="True"
                Margin="10,0,0,0" 
                MouseMove="ScrollViewer_MouseMove" 
                MouseLeave="layerPanel_MouseLeave"
                Background="Transparent"/>
        </ScrollViewer>
    </DockPanel>
</Window>